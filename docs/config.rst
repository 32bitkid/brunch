******************
Configuration file
******************

Brunch uses coffeescript configuration files to control various aspects of your application.

``defaultExtensions``
=====================

``defaultExtensions`` config field allows you to set an extension of files that would be generated by ``brunch generate`` command. Simply change it if you want, for example, ``.jade`` templates instead of ``.eco``. Example:

::

    defaultExtensions:
      script: 'coffee'
      style: 'styl'
      template: 'eco'

``files``
=========

``files`` configures handling of application files: which compiler would be used on which file, what name should output file have etc. 

Syntax: 

::

    files:
      '<output filename>'
        languages:
          '<filename regExp>': <language class>
          ...
        order:
          before: [<list of files that would be loaded before other files>]
          after: [<list of files that would be loaded after other files>]

* ``<output filename>``: path to file in ``build`` directory that would be written. For example, ``'scripts/app.js'``.
* ``<filename regExp>``: if filename matches this regExp, file would be compiled with ``<language class>``. Example: ``'\.js$'``.
* ``<language class>``: language class. More info at `<plugins.html#languages>`_.

``order`` object contains lists of files that break default loading order.

.. note::

    all files from ``vendor`` directory are automatically (by-default) loaded before all files from ``app`` directory. So, ``vendor/scripts/jquery.js`` would be loaded before ``app/script.js`` even if order config is empty.
 
Example:

::

    # (assuming you've imported)
    # {languages} = require 'brunch-extensions'
    files:
      'scripts/app.js':
        languages:
          '\.js$': languages.JavaScriptLanguage
          '\.coffee$': languages.CoffeeScriptLanguage
          '\.eco$': languages.EcoLanguage
        order:
          before: [
            'vendor/scripts/console-helper.js'
            'vendor/scripts/jquery-1.7.js'
            'vendor/scripts/underscore-1.1.7.js'
            'vendor/scripts/backbone-0.5.3.js'
          ]

      'styles/app.css':
        languages:
          '\.css$': languages.CSSLanguage
          '\.styl$': languages.StylusLanguage
        order:
          before: ['vendor/styles/normalize.css']
          after: ['vendor/styles/helpers.css']


``plugins``
===========

Simply, a list of plugins. More info about plugins at `<plugins.html#plugins>`_.

Syntax: ``plugins: [<list of plugins>]``

Example:

::

    # (assuming you've imported)
    # {plugins} = require 'brunch-extensions'
    plugins: [plugins.AssetsPlugin]
